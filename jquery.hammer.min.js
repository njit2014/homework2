/*! jQuery plugin for Hammer.JS - v1.0.1 - 2014-02-03
 * http://eightmedia.github.com/hammer.js
 *
 * Copyright (c) 2014 Jorik Tangelder <j.tangelder@gmail.com>;
 * Licensed under the MIT license */
!function(a,b){"use strict";function c(a,c){a.event.bindDom=function(a,d,e){c(a).on(d,function(a){var c=a.originalEvent||a;c.pageX===b&&(c.pageX=a.pageX,c.pageY=a.pageY),c.target||(c.target=a.target),c.which===b&&(c.which=c.button),c.preventDefault||(c.preventDefault=a.preventDefault),c.stopPropagation||(c.stopPropagation=a.stopPropagation),e.call(this,c)})},a.Instance.prototype.on=function(a,b){return c(this.element).on(a,b)},a.Instance.prototype.off=function(a,b){return c(this.element).off(a,b)},a.Instance.prototype.trigger=function(a,b){var d=c(this.element);return d.has(b.target).length&&(d=c(b.target)),d.trigger({type:a,gesture:b})},c.fn.hammer=function(b){return this.each(function(){var d=c(this),e=d.data("hammer");e?e&&b&&a.utils.extend(e.options,b):d.data("hammer",new a(this,b||{}))})}}"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(["hammerjs","jquery"],c):c(a.Hammer,a.jQuery||a.Zepto)}(this);
//# sourceMappingURL=jquery.hammer.min.map
view dragview= new DragView($(container));
container.bind("dragstart", $.proxy(dragview.OnDragStart, dragview));
container.bind("drag", $.proxy(dragview.Ondrag,dragview));
container.bind("dragend",$.proxy(dragview.OndragEnd,dragview));
setInterval($.proxy(dragview.WatchDrag,dragview), 10);

this.OnDragStart = function (event){
           var touches = event.originalEvent.touches || [event.originalEvent];
           for (var t=0; t<touches.length; t++) {
               var el = touches[t].target.parentNode;
               if(el.c;assName.search('polaroid') >-1){
                         el = touches[t].target.parentNode.parentNode;
               }
              el.style.zIndex = zIndexBackup +1;
              zIndexbackup= zIndexBackup +1;
              if(el && el == this.target) {
                 $(el).children().toggleClass('upsky');
                 this.lastDrag= {
                               el: el,
                               pos : event.touches[t]
                 return;
                 }
             }
       }

    
